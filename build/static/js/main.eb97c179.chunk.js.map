{"version":3,"sources":["Card.js","Order.js","PizzaState.js","Home.js","Checkout.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Card","item","addItem","currentState","activeItems","includes","useState","active","setActive","className","onClick","name","base","price","Order","items","next","vegOnly","setvegOnly","undefined","type","value","onChange","map","vegetarian","id","PizzaState","style","dough","toppings","sum","array","reduce","a","b","length","i","join","Home","history","useHistory","push","Checkout","accepted","setAccept","confirmed","setConfirmed","onSubmit","event","pizza","topping","console","log","alert","preventDefault","Nav","location","useLocation","orderingProcess","changeProcessNumber","no","pathname","exact","to","activeClassName","App","selectedStyle","setSelectedStyle","selectedDough","setSelectedDough","selectedToppings","setSelectedToppings","addStyle","addDough","addTopping","copyToppings","index","indexOf","splice","concat","toCheckout","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.eb97c179.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Card.css';\n\nconst Card = ({item, addItem, activeItems}) => {\n\n  // set the states taking the selected items from the app \n  const currentState = activeItems.includes(item) ? true : false;\n  const [active, setActive] = useState(currentState);\n\n  //toggles the item (active => !active)\n  const toggleBox = () => {\n    setActive(!active);\n    addItem(item);\n  };\n\n  return (\n    <div className={`Card ${active ? \"active\" : \"\"}`} onClick={toggleBox}>\n      <h1>{item.name}</h1>\n      <h2>{item.base ? '$' + item.price : '+$' + item.price}</h2>\n    </div>\n  );\n}\n\nexport default Card;","import React, { useState } from 'react';\nimport Card from './Card';\nimport './Order.css';\n\nconst Order = ({items, addItem, activeItems, next}) =>{\n\n  const [vegOnly, setvegOnly] = useState(false);\n\n  const changeVegetarian = () => {\n    setvegOnly(!vegOnly);\n  };\n\n  return (\n    <div className=\"Order\">\n        {next !== undefined ? <form className=\"form\"><label>vegetarian?</label><input type=\"checkbox\" value={vegOnly} onChange={changeVegetarian} /></form> : ''} \n        <div className=\"cards\">\n            {items.map((item) =>\n                !vegOnly || item.vegetarian ? <Card key={item.id} item={item} addItem={addItem} activeItems={activeItems} /> : '' )}\n        </div>\n        {next !== undefined ? <p onClick={next}>Checkout</p> : ''}\n    </div>\n  );\n}\n\nexport default Order;","import React from 'react';\nimport './PizzaState.css';\n\nconst PizzaState = ({style, dough, toppings}) =>{\n  \n  // a basic sum of an array function   \n  const sum = (array) => {\n    return array.reduce(function(a, b){\n        return a + b.price;\n    }, 0);\n  };\n  \n  // logic to calculatue the price of the selected items\n  const calcPrice = () => {\n    return sum(style) + sum(dough) + sum(toppings);\n  };\n\n  return (\n    <div className=\"PizzaState\">\n        {style.length !== 0 ? <p>{'Style of Pizza: ' + style.map(i => { return i.name; }).join(', ') }</p> : ''}\n        {dough.length !== 0 ? <p>{'Pizza Dough Type: ' + dough.map(i => { return i.name; }).join(', ') }</p> : ''}\n        {toppings.length !== 0 ? <p>{'Pizza Toppings: ' + toppings.map(i => { return i.name; }).join(', ') }</p> : ''}\n        <p>{'Total: $' + calcPrice()}</p>\n    </div>\n  );\n}\n\nexport default PizzaState;\n\n","import React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport \"./Home.css\"\n\nconst Home = ({}) =>{\n\n  // Uses react-router-dom to get history to navigate to first order page\n  const history = useHistory();\n\n  const toOrder = () => {\n    history.push(\"/style\");\n  };\n\n  return (\n    <div className=\"Home\">\n        <h1>Welcome to Pizza Cart!</h1>\n        <h3>Make Your Own Pizza</h3>\n        <button onClick={toOrder}>Order!</button>\n    </div>\n  );\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport './Checkout.css'\n\nconst Checkout = ({style, dough, toppings}) => {\n\n    const [accepted, setAccept] = useState(false);\n    const [confirmed, setConfirmed] = useState(false);\n\n    //checks whether the order has been confirmed by user\n    const checkoutOrder = () => {\n        setAccept(!accepted);\n    }\n  \n    const onSubmit = (event) =>  {\n        if (accepted) {\n            //{“style”: “italian”, “dough”: “standard”,“toppings”: [“cheese”, “salami”]}\n            const pizza = {\n                style: style[0].name,\n                dough: dough[0].name,\n                toppings: toppings.map(topping => {return topping.name;})\n            }\n            console.log(pizza);\n            setConfirmed(true);\n        } else {\n            alert(\"Please confirm your order\");\n        }\n        event.preventDefault();\n    }\n\n  return (\n    <div className=\"Checkout\" onSubmit={onSubmit}>\n        <form>\n            <label>Confirm order:</label>\n            <input type=\"checkbox\" value={accepted} onChange={checkoutOrder} /><br></br>\n            <button className=\"btn\">checkout</button>\n        </form>\n        {confirmed ? <p>Your order is on its way!</p> : \"\"}\n    </div> \n  );\n}\n\nexport default Checkout;","import React from 'react';\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport './Nav.css';\n\n\nconst Nav = ({}) =>{\n\n  // uses react-router-dom location to navigate through app- user cannot skip around but can return to previous pages  \n  const location = useLocation();\n  let orderingProcess = 0;\n\n  const changeProcessNumber = (no) => {\n    if (orderingProcess < no) {\n        orderingProcess = no;\n    }\n  }\n\n  switch(location.pathname) {\n      case \"/style\":\n          changeProcessNumber(0);\n          break;\n      case \"/dough\":\n          changeProcessNumber(1);\n          break;\n      case \"/toppings\":\n          changeProcessNumber(2);\n          break;\n      default:\n          changeProcessNumber(3)\n  }\n\n  return (\n    <nav className=\"Nav\">\n        {orderingProcess > 0 ? <NavLink exact to=\"/style\" activeClassName='Nav-active'>1</NavLink> : <p className=\"navitem\">1</p>}\n        {orderingProcess > 1 ? <NavLink exact to=\"/dough\" className=\"navitem\" activeClassName='Nav-active'>2</NavLink> : <p className=\"navitem\">2</p>}\n        {orderingProcess > 2 ? <NavLink exact to=\"/toppings\" className=\"navitem\" activeClassName='Nav-active'>3</NavLink> : <p className=\"navitem\">3</p>} \n    </nav>\n  );\n}\n\nexport default Nav;","import React, { useState } from 'react';\nimport { Route, Switch } from \"react-router\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Order from \"./Order\";\nimport PizzaState from \"./PizzaState\";\nimport Home from \"./Home\";\nimport Checkout from \"./Checkout\";\nimport Nav from \"./Nav\";\n\n// The data for making the pizzas (styles, dough types, toppings)\nconst items =\n  { \"style\": [\n    {\n      id: 1,\n      name: \"Italian\",\n      base: true,\n      vegetarian: true,\n      price: 4\n    },\n    {\n      id: 2,\n      name: \"American\",\n      base: true,\n      vegetarian: true,\n      price: 5\n    }\n  ],\n  \"dough\": [\n      {\n        id: 3,\n        name: \"standard\",\n        base: false,\n        vegetarian: true,\n        price: 0\n      },\n      {\n        id: 4,\n        name: \"wholegrain\",\n        base: false,\n        vegetarian: true,\n        price: 2\n      },\n      {\n        id: 5,\n        name: \"sour dough\",\n        base: false,\n        vegetarian: true,\n        price: 3\n      }\n    ], \n  \"toppings\": [\n      {\n        id: 6,\n        name: \"cheese\",\n        base: false,\n        vegetarian: true,\n        price: 0\n      },\n      {\n        id: 7,\n        name: \"mushrooms\",\n        base: false,\n        vegetarian: true,\n        price: 1\n      },\n      {\n        id: 8,\n        name: \"salami\",\n        base: false,\n        vegetarian: false,\n        price: 2\n      },\n      {\n        id: 9,\n        name: \"peppers\",\n        base: false,\n        vegetarian: true,\n        price: 1\n      },\n      {\n        id: 10,\n        name: \"beef\",\n        base: false,\n        vegetarian: false,\n        price: 3\n      },\n      {\n        id: 11,\n        name: \"chicken\",\n        base: false,\n        vegetarian: false,\n        price: 2\n      },\n      {\n        id: 12,\n        name: \"ham\",\n        base: false,\n        vegetarian: false,\n        price: 2\n      },\n      {\n        id: 13,\n        name: \"pineapples\",\n        base: false,\n        vegetarian: true,\n        price: 3\n      },\n      {\n        id: 14,\n        name: \"onions\",\n        base: false,\n        vegetarian: true,\n        price: 1\n      },\n      {\n        id: 15,\n        name: \"tuna\",\n        base: false,\n        vegetarian: false,\n        price: 1\n      }\n  ]};\n\n\nfunction App() {\n\n  const [selectedStyle, setSelectedStyle] = useState([]);\n  const [selectedDough, setSelectedDough] = useState([]);\n  const [selectedToppings, setSelectedToppings] = useState([items.toppings[0]]);\n\n  //used with react-router-dom\n  const history = useHistory();\n  const location = useLocation();\n\n  //style type is added to cart then user moves to the dough type selection page\n  const addStyle = (item) => {\n    setSelectedStyle([item]);\n    history.push(\"/dough\");\n  };\n  \n  //dough type is added to cart then user moves to the toppings selection page\n  const addDough = (item) => {\n    setSelectedDough([item]);\n    history.push(\"/toppings\");\n  };\n\n  //toppings are added (the can be removed too) \n  const addTopping = (item) => {\n    if (selectedToppings.includes(item)) {\n      // if already in array remove topping \n      let copyToppings = [...selectedToppings];\n      const index = copyToppings.indexOf(item);\n      copyToppings.splice(index, 1);\n      setSelectedToppings(copyToppings);\n    } else {\n      // if not in array add topping\n      setSelectedToppings(selectedToppings.concat(item));\n    } \n  };\n\n  // for the checkout button on the toppings page\n  const toCheckout = () => {\n    history.push(\"/checkout\");\n  };\n\n  //use react-router-dom to build the checkout process (home -> syle -> dough -> toppings -> checkout)\n  return (\n    <div className=\"App\">\n      {location.pathname === \"/\" ? '' : <Nav />}\n      {location.pathname === \"/\" ? '' : <PizzaState style={selectedStyle} dough={selectedDough} toppings={selectedToppings} />}\n      <Switch>\n        <Route \n          exact path=\"/\"      \n          render={() => <Home />} />\n        <Route \n          exact path=\"/style\"  \n          render={() => <Order items={items.style} addItem={addStyle} activeItems={selectedStyle} />} />\n        <Route \n          exact path=\"/dough\"\n          render={() => <Order items={items.dough} addItem={addDough} activeItems={selectedDough} /> } />\n        <Route \n          exact path=\"/toppings\"\n          render={() => <Order items={items.toppings} addItem={addTopping} activeItems={selectedToppings} next={toCheckout} />} />\n        <Route \n          exact path=\"/checkout\"\n          render={() => <Checkout style={selectedStyle} dough={selectedDough} toppings={selectedToppings} /> } />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}